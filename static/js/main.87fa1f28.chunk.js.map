{"version":3,"sources":["images/managericon1.png","component/json.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","json","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filtering","filteringByID","filteringByScheduleState","filteringByOwner","addInProgress","addDefined","addAccepted","addComleted","gridData","inpro","diff","acc","comp","nextProps","props","setState","check","e","filterStr","target","value","filter","el","toLowerCase","match","OnAddInProgress","OnAddDefined","OnAddAccepted","OnAddComleted","map","isNaN","parseFloat","length","q","r","s","react_default","a","createElement","className","data","index","key","header","renderHeader","grid","renderRow","type","id","placeholder","onChange","onChangeHandler","bind","list","onChangeHandlerByID","onChangeHandlerByState","onChangeHandlerByOwner","React","Component","Papa","require","App","fileReader","FileReader","jsonData","csvf","filecontent","_this2","reader","onload","evt","readyState","error","alert","result","parse","readAsText","files","_this3","src","icon","alt","accept","csvJSON","json_json","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.87fa1f28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/managericon1.464da1b1.png\";","import React from 'react'\r\n\r\nexport default class json extends React.Component {\r\n    constructor() {\r\n        super();\r\n            this.state= {\r\n            filtering: '',\r\n            filteringByID: '',\r\n            filteringByScheduleState: '',\r\n            filteringByOwner: '',\r\n            addInProgress:'',\r\n            addDefined:'',\r\n            addAccepted:'',\r\n            addComleted:'',\r\n            gridData: [],\r\n            inpro: [],\r\n            diff: [],\r\n            acc: [],\r\n            comp: []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.gridData !== this.props.gridData) {\r\n            this.setState({\r\n                gridData: this.check(nextProps)\r\n            })\r\n        }\r\n    }\r\n    \r\n    onChangeHandler(e) {\r\n        const filterStr = e.target.value\r\n        const gridData = this.check(this.props).filter((el) => {\r\n            return (el['Formatted ID']+el['Schedule State']+el['Owner']+el['Tags']+el['Ready'])\r\n            .toLowerCase().match(filterStr.toLowerCase());\r\n        });\r\n        //console.log('gridData', gridData)\r\n        const inpro=this.OnAddInProgress();\r\n        const diff=this.OnAddDefined();\r\n        const acc=this.OnAddAccepted();\r\n        const comp=this.OnAddComleted();\r\n        //console.log('Hello add ',inpro[inpro.length-1])\r\n        this.setState({\r\n            filtering: filterStr,\r\n            gridData,\r\n            inpro,\r\n            diff,\r\n            acc,\r\n            comp\r\n        })\r\n    }\r\n\r\n    onChangeHandlerByID(e) {\r\n        const filterStr = e.target.value\r\n        const gridData = this.check(this.props).filter((el) => {\r\n             return el['Formatted ID'] && (el['Formatted ID']).toLowerCase().match(filterStr.toLowerCase())\r\n        });\r\n        //console.log('gridData', gridData)\r\n        const inpro=this.OnAddInProgress();\r\n        const diff=this.OnAddDefined();\r\n        const acc=this.OnAddAccepted();\r\n        const comp=this.OnAddComleted();\r\n        this.setState({\r\n            filteringByID: filterStr,\r\n            gridData,inpro,\r\n            diff,\r\n            acc,\r\n            comp\r\n        })\r\n    }\r\n    onChangeHandlerByState(e) {\r\n        const filterStr = e.target.value\r\n        const gridData = this.check(this.props).filter((el) => {\r\n            return el['Schedule State'] && (el['Schedule State']).toLowerCase().match(filterStr.toLowerCase())\r\n        });\r\n        //console.log('gridData', gridData)\r\n        const inpro=this.OnAddInProgress();\r\n        const diff=this.OnAddDefined();\r\n        const acc=this.OnAddAccepted();\r\n        const comp=this.OnAddComleted();\r\n        this.setState({\r\n            filteringByScheduleState: filterStr,\r\n            gridData,\r\n            inpro,\r\n            diff,\r\n            acc,\r\n            comp\r\n        })\r\n    }\r\n    onChangeHandlerByOwner(e) {\r\n        const filterStr = e.target.value\r\n        const gridData = this.check(this.props).filter((el) => {\r\n            return el['Owner'] && (el['Owner']).toLowerCase().match(filterStr.toLowerCase())\r\n        });\r\n        //console.log('gridData', gridData)\r\n        const inpro=this.OnAddInProgress();\r\n        const diff=this.OnAddDefined();\r\n        const acc=this.OnAddAccepted();\r\n        const comp=this.OnAddComleted();\r\n        this.setState({\r\n            filteringByOwner: filterStr,\r\n            gridData,\r\n            inpro,\r\n            diff,\r\n            acc,\r\n            comp\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    OnAddInProgress() {\r\n        let p=0;\r\n        const inpro = this.state.gridData.map(e=>{\r\n            if(isNaN(parseFloat(e['Plan Estimate']))) {\r\n                e['Plan Estimate']=0;\r\n            }\r\n            if(e['Schedule State'] === 'In-Progress') {\r\n                p=parseFloat(e['Plan Estimate']) +p;\r\n            }\r\n            return p;\r\n        })\r\n        return inpro[inpro.length-1]\r\n    }\r\n    OnAddDefined() {\r\n        let q=0;\r\n        const diff = this.state.gridData.map(e=>{\r\n            if(isNaN(parseFloat(e['Plan Estimate']))) {\r\n                e['Plan Estimate']=0;\r\n            }\r\n            if(e['Schedule State'] === 'Defined') {\r\n                q=parseFloat(e['Plan Estimate']) +q;\r\n            }\r\n            return q;\r\n        })\r\n        return diff[diff.length-1]\r\n    }\r\n    OnAddAccepted() {\r\n        let r=0;\r\n        const acc = this.state.gridData.map(e=>{\r\n            if(isNaN(parseFloat(e['Plan Estimate']))) {\r\n                e['Plan Estimate']=0;\r\n            }\r\n            if(e['Schedule State'] === 'Accepted') {\r\n                r=parseFloat(e['Plan Estimate']) +r;\r\n            }\r\n            return r;\r\n        })\r\n        return acc[acc.length-1]\r\n    }\r\n    OnAddComleted() {\r\n        let s=0;\r\n        const comp = this.state.gridData.map(e=>{\r\n            if(isNaN(parseFloat(e['Plan Estimate']))) {\r\n                e['Plan Estimate']=0;\r\n            }\r\n            if(e['Schedule State'] === 'Completed') {\r\n                s=parseFloat(e['Plan Estimate']) +s;\r\n            }\r\n            return s;\r\n        })\r\n        return comp[comp.length-1]\r\n    }\r\n    \r\n\r\n    check(props) {\r\n        const {gridData} = props;\r\n        \r\n        return gridData;\r\n    }\r\n\r\n\r\n    renderHeader(){\r\n        // console.log('hello',this.state.gridData)\r\n        \r\n        return(\r\n            <thead className=\"theadClass\">\r\n                <tr>\r\n                    <th>Formatted ID</th>\r\n                    <th>Name</th>\r\n                    <th>Schedule State</th>\r\n                    <th>Plan Estimate</th>\r\n                    <th>Task Estimate Total</th>\r\n                    <th>Task Actual Total</th>\r\n                    <th>Task Remaining Total</th>\r\n                    <th>Owner</th>\r\n                    <th>Tag</th>\r\n                    <th>Ready</th>\r\n                </tr>\r\n                                        \r\n            </thead>\r\n        )\r\n    }\r\n    renderRow(){\r\n        const {gridData} = this.state;\r\n        //console.log('renderrow',gridData)\r\n            const pp= gridData.map(function(data,index)\r\n              {\r\n                return( <tbody>\r\n                    <tr key={index}>\r\n                    <td>{data['Formatted ID']}</td>\r\n                    <td>{data['Name']}</td>\r\n                    <td>{data['Schedule State']}</td>\r\n                    <td>{data['Plan Estimate']}</td>\r\n                    <td>{data['Task Estimate Total']}</td>\r\n                    <td>{data['Task Actual Total']}</td>\r\n                    <td>{data['Task Remaining Total']}</td>\r\n                    <td>{data['Owner']}</td>\r\n                    <td>{data['Tags']}</td>\r\n                    <td>{data['Ready']}</td>\r\n                    </tr>\r\n                </tbody>\r\n                )\r\n              }\r\n        )\r\n        return pp;\r\n    }\r\n\r\n\r\n    render(){\r\n        // console.log(this.state.gridData)\r\n        // console.log('Hello add ',this.state.inpro[this.state.inpro.length-1])\r\n        const header = this.renderHeader();\r\n        const grid = this.renderRow();\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <input type=\"text\"\r\n                            id={this.id}\r\n                            value={this.state.filtering}\r\n                            className=\"input-file2\"\r\n                            placeholder=\"Search...\"\r\n                            onChange={this.onChangeHandler.bind(this)}\r\n                    />\r\n                    <input type=\"text\"\r\n                            id={this.id}\r\n                            list=\"filterByID\"\r\n                            value={this.state.filteringByID}\r\n                            className=\"input-file2\"\r\n                            placeholder=\"Search by ID...\"\r\n                            onChange={this.onChangeHandlerByID.bind(this)}\r\n                    />\r\n                    <input type=\"text\"\r\n                            id={this.id}\r\n                            value={this.state.filteringByScheduleState}\r\n                            className=\"input-file2\"\r\n                            placeholder=\"Search by schedule state...\"\r\n                            onChange={this.onChangeHandlerByState.bind(this)}\r\n                    />\r\n                    <input type=\"text\"\r\n                            id={this.id}\r\n                            value={this.state.filteringByOwner}\r\n                            className=\"input-file2\"\r\n                            placeholder=\"Search by owner...\"\r\n                            onChange={this.onChangeHandlerByOwner.bind(this)}\r\n                    />\r\n                </div>\r\n                    <div className=\"hrLine\">\r\n                        <hr></hr>\r\n                    </div>\r\n                    <div className=\"totalDetals\">\r\n                        <h2 className=\"shortTableDetails\">Total PlanEstimate according to schedulestates :</h2>\r\n                        <table id=\"details\">\r\n                            <tr>\r\n                                <th>InProgress</th>\r\n                                <th>Defined</th>\r\n                                <th>Accepted</th>\r\n                                <th>Completed</th>\r\n                                <th>Total</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{this.state.inpro}</td>\r\n                                <td>{this.state.diff}</td>\r\n                                <td>{this.state.acc}</td>\r\n                                <td>{this.state.comp}</td>\r\n                                <td>{this.state.inpro+this.state.diff+this.state.acc+this.state.comp}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <table id=\"customers\">\r\n                        {header}\r\n                        {grid}\r\n                    </table> \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport Json from './component/json';\nimport './FileChoice.css';\nimport icon from './images/managericon1.png';\n\nconst Papa = require('papaparse')\n\nclass App extends Component \n{ \n  constructor()\n  {\n    super();\n    this.fileReader=new FileReader();\n    this.state={\n      jsonData:[]\n    }\n      \n}\ncsvJSON(csvf)\n{\n  var reader = new FileReader();\n  let filecontent;\n  reader.onload = (evt)=>\n {\n      if(evt.target.readyState !== 2) return;\n      if(evt.target.error) {\n          alert('Error while reading file');\n          return;\n      }\n      filecontent = evt.target.result;\n      //console.log(filecontent)\n        const { data } = Papa.parse(filecontent, {header: true})\n        //const varr=data.filter(e=>e['Formatted ID']==='US26152');\n        //console.log(\"gsdf\",varr)\n        this.setState({\n          jsonData: data\n        })\n   \n    //  this.jsonData = ;\n  //  console.log(Papa.parse(filecontent, {header: true}))\n\n      //renderHeader(jsonData)\n  };\n  reader.readAsText(csvf.target.files[0]);\n\n}\n  render()\n   {\n    //  console.log('rendering ', this.state.jsonData)\n    return (\n      <div id=\"in\">\n\n        <div className=\"companyName\">\n            <div className=\"logo1\">\n                <img src={icon} className=\"logo-spinning\" alt=\"managerIcon\"/>\n            </div>\n            <div className=\"EmpDash\">\n                <h1 className=\"heading\">Employee Dashboard Management System</h1>\n            </div>\n        </div>\n\n          {/* <input type=\"file\" accept=\".csv\" onChange={(e)=> this.csvJSON(e)}></input> */}\n      <div className=\"mainbody\">                        \n      <input type=\"file\"\n          id=\"file\"\n          className=\"input-file1\"\n          accept=\".csv\"\n          onChange={(e)=> this.csvJSON(e)}\n      />\n      \n      <Json gridData={this.state.jsonData}/>\n    {/* <input type=\"text\"  onChange={(e)=>this.filter(e)}></input> */}\n    {/* <table>\n      <tr>\n      \n        <th>Formatted ID</th>\n        <th>Name</th>\n        <th>Schedule State</th>\n        <th>Plan Estimate</th>\n        <th>Task Estimate Total</th>\n        <th>Task Actual Total</th>\n        <th>Task Remaining Total</th>\n        <th>Owner</th>\n        <th>Tags</th>\n        <th>Ready</th>\n      </tr>\n        {\n          this.state.jsonData.map(function(data,index)\n        {\n          return(<tr key={index}>\n            <td>{data['Formatted ID']}</td>\n            <td>{data['Name']}</td>\n            <td>{data['Schedule State']}</td>\n            <td>{data['Plan Estimate']}</td>\n            <td>{data['Task Estimate Total']}</td>\n            <td>{data['Task Actual Total']}</td>\n            <td>{data['Task Remaining Total']}</td>\n            <td>{data['Owner']}</td>\n            <td>{data['Tags']}</td>\n            <td>{data['Ready']}</td>\n            </tr>\n          )\n        }\n        )\n        }\n    </table>\n   */}\n    </div>\n    \n  </div>\n    );\n  }\n  }\n   export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}